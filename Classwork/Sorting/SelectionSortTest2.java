package Classwork.Sorting;

public class SelectionSortTest2 {
  public static void main(String[] args) {
    int[] question1 = { 38, 11, -16, 88, 5, -34, -52, -59, -30, -4, -65, -93, 11, 84, -6, -1, 93, -46, -99, 66, -2, 10,
        -70, 43, -39, 8, -11, -50, -77, -76, -78, -51, 22, -61, -23, -94, -79, -26, 68, -49, -43, -81, 19, -59, 15, 66,
        21, 80, -35, 51, 17, 80, -27, 36, 7, 65, 23, -60, 16, 16, 40, -69, -44, 98, -82, -86, 2, -3, -18, -3, -3, 86,
        -36, 94, 92, 96, -88, -75, -46, 13, 66, -32, -68, -79, 37, 23, 21, -63, 68, 62, 85, 32, 79, -22, 58, 70, 72, 60,
        13, 4 };
    int[] question2 = { 59, -62, 3, -41, 69, 44, -52, 62, 30, -90, 71, 47, -35, 73, 14, -73, 100, 2, 30, 91, 58, -51,
        46, -77, 24, -27, 98, -20, 7, -88, 43, -58, 62, 99, -3, -59, -62, 96, -66, 16, 40, -54, -52, 2, 75, 92, 91, -44,
        33, -27, 76, -22, -62, -37, 26, -73, -46, 29, -38, 74, -47, -95, 69, -71, -12, 11, 2, -3, -28, -88, 97, 23, -11,
        -31, -97, -60, -75, -50, -84, -100, -82, 54, -94, -93, 84, 38, -21, -97, -17, -75, -29, -35, -73, -9, 43, 54,
        -62, -85, -43, 36 };
    int[][] question3 = {
        { 36, -73, 8, -27, -6, 24, 18, 5, -5, 42, -91, -100, 75, 4, -48, -9, 93, 21, -43, -49, 55, 72, -59, 40, 58, -86,
            9, 28, 38, 24, 87, -3, 81, -90, 74, 5, -37, -39, -87, -53, 72, -8, -66, -7, 47, -35, -50, -81, 82, 58, 53,
            -17, -72, -63, -41, 28, -33, 60, -40, 28, 16, -8, -12, 33, -89, 99, -6, 69, -22, -23, -25, 39, -19, -5, -85,
            52, 66, 63, 59, 24, -29, 74, -80, 33, -5, 7, 39, 87, 79, 20, -9, 3, -51, 1, -49, 97, -18, -87, -72, -49 },
        { -71, 76, -49, 29, -90, -12, -72, -91, -16, -2, -71, -25, 13, 28, -95, -10, 84, -42, -81, 70, 72, 98, -39, -79,
            62, 42, -32, 97, 37, -32, -81, 78, -66, -14, 34, 22, 30, 38, 27, -40, -56, 52, -41, -36, 77, 1, -68, 23,
            -16, -66, 40, 32, -22, 58, -98, 91, 13, 83, 60, 31, -24, -23, 11, -11, 56, 83, -72, 17, -17, 95, 17, -92,
            80, 26, 48, 89, -40, -48, -40, 62, 11, -95, 90, 76, 34, 6, 66, -17, -74, 9, 15, -59, -14, 49, -15, -32, 86,
            34, 57, -39 },
        { 88, -93, 20, 81, 63, -10, 47, 100, -61, 15, 58, -85, 57, 69, -100, -97, -11, -43, 50, -15, 89, 32, 3, -23,
            -44, 60, 31, 8, 26, -85, 61, -77, 65, 60, 26, 71, 31, 76, -28, 85, 18, -49, -22, -26, -31, 5, 96, -73, 26,
            -65, 51, 78, 99, -50, -97, -78, -37, -77, -72, 2, -84, -93, -75, 72, 16, -19, -21, -39, -77, -15, 65, 59,
            -42, 8, 91, 31, -69, -72, 18, 91, 58, -46, 62, -88, 91, -97, -73, 25, 25, -7, -72, 92, 46, -53, 96, -97,
            -47, 72, -76, 10 },
        { -67, -97, -56, -88, -84, 32, -87, -93, 12, -50, 52, -42, 20, 89, 87, -59, 5, -39, -92, -97, 44, -94, 37, 34,
            -6, -95, 66, -78, 21, -57, 18, -33, -86, -90, 91, 21, -53, -46, 48, -11, 29, -2, 8, 36, -47, 42, 45, 67, 61,
            8, 23, -4, 77, -3, 82, 64, 93, 29, 86, -62, -97, 65, 35, 86, -84, -60, -3, -80, 42, -54, -33, 19, -14, -58,
            58, 30, 70, -42, -46, -59, -78, 40, 73, -9, -20, 59, 83, -48, -31, -39, -40, 10, 71, 0, -17, 88, 24, -27,
            36, 90 },
        { -63, -20, -44, 42, -36, 3, 21, -11, -43, -65, 92, -82, -75, -93, -40, -75, -35, -93, -64, -48, -33, -55, -29,
            -49, 75, 40, 50, -96, 96, -24, 64, 45, 88, 2, 60, -8, -94, -46, 92, 18, -56, 17, 6, 63, -62, 70, 78, -85,
            -47, -75, -15, -8, 97, -82, -12, -19, 7, 43, 11, -7, -63, 86, 4, -25, 29, 35, -26, -81, -55, -52, 50, 45,
            89, 87, 71, -23, 46, 46, -41, -50, -35, -50, -1, -29, -67, -72, 19, 18, 45, 39, -34, 28, 49, 79, -25, -66,
            -95, 95, 75, 90 },
        { -55, 78, -15, 24, 33, -9, 70, -6, 79, -73, 25, 80, -9, -19, -14, -58, 47, -75, -100, -62, 77, -30, 12, 76,
            -33, 75, -99, -64, -22, -21, -94, -2, 83, -61, 82, 24, 93, 57, -34, 51, -53, -67, -43, -56, 24, -25, -93,
            88, 68, 69, -19, 97, -21, 61, 87, -51, -81, 31, 80, 28, 34, -13, -45, 86, -91, 87, 18, -15, 87, 81, -50, 25,
            -25, 69, 70, 71, 77, 33, -48, 47, 16, 52, -94, -67, -20, 64, -84, -43, -59, -85, -97, 98, 75, 92, 56, 61,
            -11, 60, 52, -48 },
        { -74, 31, 65, 40, 87, 5, -53, 82, -85, -10, -48, -67, 52, 99, 40, -95, -31, -35, -95, -72, -37, -57, 23, 56,
            -37, -43, 89, -31, -45, -44, 46, -9, 10, -76, 23, -84, 33, -27, -62, 71, -34, 30, -43, 58, -9, 6, -49, 13,
            98, 33, 76, 53, 85, -6, 80, 69, -64, 63, 41, 23, 61, -28, -97, 91, -65, -54, -96, 72, -16, 50, -86, -22, 96,
            -18, 76, -85, 55, 75, -64, 9, 10, -95, -78, -36, -80, 61, 25, -60, -12, -43, -75, 48, -24, -84, 35, -72,
            -86, -5, 81, -26 },
        { -22, 72, 12, 24, -22, 81, 85, 27, -74, -74, 63, 45, -65, -5, -95, 7, -68, 94, -94, 86, 89, 91, 83, 3, 65, 4,
            -95, 50, -96, -80, -77, -2, -50, -61, -93, 84, -64, 7, 2, 39, -90, 47, -76, -44, -37, 37, 17, 15, -87, 33,
            20, 22, 35, -97, 72, 2, -20, 91, 25, 37, -80, -35, 25, 83, -2, -17, -59, 90, 27, -50, 73, -87, -3, -89, 43,
            37, -84, 72, -11, 43, 92, 49, -57, 40, 79, -65, -78, -47, 85, 53, 94, -35, 18, -62, -96, -81, -68, 22, -27,
            89 },
        { -28, -39, -70, -12, -55, -64, -96, 53, -72, -61, -19, 31, 58, 14, -86, 34, 63, 98, 64, -95, 3, -80, 46, -19,
            76, 45, -77, 69, 8, 60, -70, -70, -1, 3, -51, 46, -33, -10, -24, 47, 25, -25, -53, -70, -10, -9, 34, -3,
            -12, -30, -15, 94, 30, -3, 78, 69, 12, -4, -98, 98, 11, 53, -46, -26, -33, -86, -46, -43, 64, -21, 17, 42,
            10, 53, -3, -70, 44, -17, -40, 4, 17, 2, 26, -71, 38, 83, 85, 29, -49, -40, -77, 99, 7, -37, -69, -20, 7,
            -88, 23, 71 },
        { -25, 25, -42, 98, -89, -46, -57, 80, -61, -57, -83, 91, -58, -24, 45, 58, 92, -31, 71, -96, -46, 82, 55, 78,
            73, 52, 28, -48, 93, -100, -79, -63, -87, -68, 57, -48, -33, 98, -1, 60, 87, -18, 16, 70, -46, -19, -43,
            -77, -3, -73, 96, 30, 8, 34, -27, 35, 13, -27, 14, -29, 68, -53, -23, -13, 18, 57, 8, -57, -93, 55, -26, 65,
            -63, 48, 7, -58, 57, -89, 46, -24, -76, 50, 70, 57, 14, -46, 46, -56, -57, 21, -19, 95, 6, -42, -27, -30,
            52, 11, -70, -15 },
        { 40, -95, 49, 59, -66, 22, 64, 27, 55, -38, -6, 36, 82, -60, -57, 82, -44, -68, -96, 96, 46, 38, 4, 11, 5, 9,
            -16, 97, 23, 13, -25, -22, -73, 55, 4, 31, -9, 95, 16, -2, 95, -37, -14, 13, -18, 45, -32, -6, 34, -72, -33,
            91, -74, 10, -87, -9, 10, 50, 21, -5, 66, -36, 85, 22, 57, 14, -14, -31, 7, 49, -30, -36, 51, 96, -74, -97,
            -31, -19, 75, 11, 22, -81, 31, 60, 86, -51, -12, 92, -98, 61, -99, -100, 86, -43, 68, -64, 73, -74, 19,
            -35 } };

    System.out.print("Testing selectionSort():");
    selectionSort(question1);
    boolean pass = true;
    if (!(question1[0] == -99 && question1[1] == -94)) {
      pass = false;
    }
    for (int x = 1; x < question1.length; x++) {
      if (question1[x - 1] > question1[x]) {
        pass = false;
      }
    }
    if (pass)
      System.out.println("pass!");
    else
      System.out.println("failed!");

    System.out.print("Testing selectionSort2()");
    selectionSort2(question2);
    pass = true;
    if (!(question2[0] == 100 && question2[1] == 99)) {
      pass = false;
    }
    for (int x = 1; x < question2.length; x++) {
      if (question2[x - 1] < question2[x]) {
        pass = false;
      }
    }
    if (pass)
      System.out.println("pass!");
    else
      System.out.println("failed!");

    System.out.print("Testing selectionSort2D()");
    selectionSort2D(question3);
    pass = true;
    if (!(question3[0][0] == -100 && question3[0][1] == -91)) {
      pass = false;
    }
    for (int row = 0; row < question3.length; row++) {
      for (int x = 1; x < question3[row].length; x++) {
        if (question3[row][x - 1] > question3[row][x]) {
          pass = false;
        }
      }
    }

    if (pass)
      System.out.println("pass!");
    else
      System.out.println("failed!");

  }

  public static void selectionSort(int[] arr) {
    for (int i = 0; i < arr.length; i++) {
      int minimum = i;
      for (int j = i + 1; j < arr.length; j++) {
        if (arr[j] < arr[minimum]) {
          swap(arr, j, i);
        }
      }
    }
  }

  public static void selectionSort2(int[] arr) {
    for (int i = 0; i < arr.length; i++) {
      for (int j = i + 1; j < arr.length; j++) {
        if (arr[j] > arr[i]) {
          swap(arr, j, i);
        }
      }
    }

  }

  public static void selectionSort2D(int[][] arr) {
    for (int i = 0; i < arr.length; i++) {
      selectionSort(arr[i]);
    }

  }

  public static void swap(int[] arr, int indexOne, int indexTwo) {
    int temp = arr[indexOne];
    arr[indexOne] = arr[indexTwo];
    arr[indexTwo] = temp;
  }
}
